@model DemoNew.Models.Master

@{
    ViewBag.Title = "EmployeeRegistration";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@using (Html.BeginForm("EmployeeRegistration", "Admin", FormMethod.Post, new { @id = "form1", enctype = "multipart/form-data", @autocomplete = "off" }))
{
    <div class="content-body">
        <div class="container-fluid">
            <div class="mb-sm-4 d-flex flex-wrap align-items-center text-head">
                <h4 class="mb-3 me-auto">/ Master / Employee Registration</h4>
                <div>
                    <ol class="breadcrumb">
                        @*<li class="breadcrumb-item"><a href="javascript:void(0)">Dashboard</a></li>
                            <li class="breadcrumb-item"><a href="javascript:void(0)">Dashboard</a></li>*@
                    </ol>
                </div>
            </div>
            <div class="col-xl-12 col-lg-12">
                <div class="card">
                    <div class="card-header">
                        <h4 class="card-title">Add Employee</h4>
                    </div>
                    <div class="card-body">
                        <div class="basic-form">
                            <div class="row">
                                <div class="mb-3 col-md-4">
                                    <label class="form-label">Department<span style="color:red">*</span></label>
                                    @Html.DropDownListFor(m => m.DepartmentID, new SelectList(ViewBag.ddlDepartment, "Value", "Text"), new { @class = "me-sm-2 default-select form-control wide select-name1", @onchange = "return GetDesignation();" })
                                </div>
                                <div class="mb-3 col-md-4">
                                    <label class="form-label">Designation<span style="color:red">*</span></label>
                                    @Html.DropDownListFor(m => m.DesignationID, new SelectList(ViewBag.ddlDesignation, "Value", "Text"), new { @class = "me-sm-2 default-select form-control wide select-name2" })
                                </div>
                                <div class="mb-3 col-md-4">
                                    <label class="form-label">Employee Name<span style="color:red">*</span></label>
                                    @Html.TextBoxFor(m => m.EmployeeName, new { @class = "form-control", @placeholder = "Employee Name"})
                                </div>
                                <div class="mb-3 col-md-4">
                                    <label class="form-label">Father's Name</label>
                                    @Html.TextBoxFor(m => m.FatherName, new { @class = "form-control", @placeholder = "Father's Name" })
                                </div>
                                <div class="mb-3 col-md-4">
                                    <label class="form-label">Mobile No<span style="color:red">*</span></label>
                                    @Html.TextBoxFor(m => m.Contact, new { @class = "form-control", @placeholder = "Project Name" })
                                </div>
                                <div class="mb-3 col-md-4">
                                    <label class="form-label">Gender<span style="color:red">*</span></label>
                                    @Html.DropDownListFor(m => m.Gender, new SelectList(ViewBag.Gender, "Value", "Text"), new { @class = "me-sm-2 default-select form-control wide select-name3" })
                                </div>
                                
                                <div class="mb-3 col-md-4">
                                    <label class="form-label">Date of Birth<span style="color:red">*</span></label>
                                    @Html.TextBoxFor(m => m.DOB, new { @class = "datepicker-default form-control", @placeholder = "Date of Birth",@onchange="return formatDate(); "})
                                </div>
                                <div class="mb-3 col-md-4">
                                    <label class="form-label">Email</label>
                                    @Html.TextBoxFor(m => m.Email, new { @class = "form-control", @placeholder = "Email" })
                                </div>
                            </div>

                            <input type="submit" id="Save" name="Save" class="btn btn-primary" onclick="return validateform()" value="Save">
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
}
<style>
    .errortext {
        border: 1px solid red !important;
    }
</style>

<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.7.1/jquery.min.js" integrity="sha512-v2CJ7UaYy4JwqLDIrZUI/4hqeoQieOmAZNXBeQyjo21dadnwR+8ZaIJVT8EE2iyI61OV8e6M8PP2/4hpQINQ/g==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>
<script>

   



    function validateform() {
        $(".errortext").removeClass("errortext");
        debugger;
        if ($('#DepartmentID').val() == '0') {
            $("#DepartmentID").addClass("errortext");
            $(".select-name1").addClass("errortext");
            $('#DepartmentID').focus();
            return false;
        }
        if ($('#DesignationID').val() == '0') {
            $("#DesignationID").addClass("errortext");
            $(".select-name2").addClass("errortext");
            $('#DesignationID').focus();
            return false;
        }
        if ($('#EmployeeName').val() == '') {
            $("#EmployeeName").addClass('errortext');
            $('#EmployeeName').focus();
            return false;
        }
        if ($('#Contact').val() == '') {
            $("#Contact").addClass('errortext');
            $('#Contact').focus();
            return false;
        }
        if ($('#Gender').val() == '') {
            $("#Gender").addClass('errortext');
            $(".select-name3").addClass('errortext');
            $('#Gender').focus();
            return false;
        }
        if ($('#DOB').val() == '') {
            $("#DOB").addClass('errortext');
            $('#DOB').focus();
            return false;
        }
        return true;
    }

    function GetDesignation() {

        var value = $('#DepartmentID').val();
        var values = $('#DesignationID').val();
        var tr = [];
        $.ajax({
            url: "/Master/GetDesignation",
            Type: "Get",
            DataType: "JSON",
            data: { DepartmentID: value },
            success: function (data) {

                var j = 1;
                if (data.Result == "yes") {
                    debugger;
                    $("#DesignationID").html(""); // clear before appending new list
                    $("#DesignationID").empty();
                    $("#DesignationID").append(
                          $('<option></option>').val(0).html('Select Designation'));
                    //$(".select-name2 .list").append(
                    //      $('<li class="option"></li>').val(0).html('Select Designation'));
                    $.each(data.ddlDesignation, function (index, Sectorcount) {
                        $("#DesignationID").append(
                              $('<option></option>').val(Sectorcount.Value).html(Sectorcount.Text));
                        $(".select-name2 .list").append(
                         $('<li class="option"></li>').val(Sectorcount.Value).html(Sectorcount.Text));
                      

                    });
                }
                else {
                    $("#DesignationID").empty();

                }
            }

        });

    }
    debugger;
    var DesginationID = $(".select-name2 .list").val();
    $("DesignationID").val(DesginationID);
</script>





